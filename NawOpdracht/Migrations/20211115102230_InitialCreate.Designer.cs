// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NawOpdracht.Data;

namespace NawOpdracht.Migrations
{
    [DbContext(typeof(MainDbContext))]
    [Migration("20211115102230_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("NawOpdracht.Data.DataObjects.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("HouseNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreetName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Town")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Address", "Naw");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            HouseNumber = "12a",
                            StreetName = "SomeStreet",
                            Town = "Amsterdam"
                        },
                        new
                        {
                            Id = 2,
                            HouseNumber = "23",
                            StreetName = "SomeStreet2",
                            Town = "DenHaag"
                        });
                });

            modelBuilder.Entity("NawOpdracht.Data.DataObjects.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.ToTable("Person", "Naw");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AddressId = 2,
                            Age = 39,
                            FirstName = "Henk",
                            LastName = "Van den Tillaard"
                        },
                        new
                        {
                            Id = 2,
                            AddressId = 1,
                            Age = 68,
                            FirstName = "Truus",
                            LastName = "Huus"
                        });
                });

            modelBuilder.Entity("NawOpdracht.Data.DataObjects.Person", b =>
                {
                    b.HasOne("NawOpdracht.Data.DataObjects.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");
                });
#pragma warning restore 612, 618
        }
    }
}
